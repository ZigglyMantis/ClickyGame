{"version":3,"sources":["components/Banner/Banner.js","components/NavTabs/NavTabs.js","components/Wrapper/Wrapper.js","components/Wrapper/ImageCards/ImageCard.js","App.js","index.js"],"names":["Banner","className","NavTabs","props","victoryCondition","score","Wins","Wrapper","children","ImageCard","alt","id","src","image","onClick","onMouse1","App","state","images","guessedImages","winCondition","event","target","setState","generateRandomImage","console","log","correctGuess","push","parseInt","length","genArr","warframeIndex","randomResult","z","Math","floor","random","indexOf","map","index","this","includes","key","count","Component","ReactDOM","render","document","getElementById"],"mappings":"osEAYeA,MATf,WACI,OACI,yBAAKC,UAAU,aACX,4CACA,wH,MCYGC,MAhBf,SAAkBC,GACd,OACI,yBAAKF,UAAU,6BACX,yBAAKA,UAAU,SACX,4CAEJ,yBAAKA,UAAU,SACX,4BAAKE,EAAMC,mBAEf,yBAAKH,UAAU,SACX,sCAAYE,EAAME,MAAlB,cAAoCF,EAAMG,S,aCJ3CC,MANf,SAAiBJ,GACb,OACI,yBAAKF,UAAU,qCAAqCE,EAAMK,W,MCQnDC,MAVf,SAAmBN,GACf,OACI,yBAAKF,UAAU,QACX,yBAAKA,UAAU,iBACX,yBAAKS,IAAKP,EAAMQ,GAAIC,IAAKT,EAAMU,MAAOC,QAASX,EAAMY,cC8FtDC,E,2MA3FbC,MAAQ,CACNC,OAAQA,EACRb,MAAO,EACPC,KAAM,EACNa,cAAe,GACff,iBAAkB,GAClBgB,aAAc,I,EAoChBL,SAAW,SAAAM,GAAU,IACXX,EAAQW,EAAMC,OAAdZ,IACR,GAAI,EAAKS,cAAcT,GACrB,EAAKO,MAAME,cAAgB,GAC3B,EAAKI,SAAS,CACZL,OAAQ,EAAKM,oBAAoB,EAAKP,MAAMC,QAC5Cd,iBAAkB,+CAClBC,MAAO,IAEToB,QAAQC,IAAI,EAAKT,MAAMC,YAClB,CACL,IAAIS,EAAe,EAAKV,MAAME,cAC9BQ,EAAaC,KAAKC,SAASnB,IAE3B,EAAKa,SAAS,CACZlB,MAAOsB,EAAaG,OACpBX,cAAeQ,EACfT,OAAQ,EAAKM,oBAAoB,EAAKP,MAAMC,QAC5Cd,iBAAkB,UAGtB,EAAKgB,gB,mFArDaW,GAGlB,IAFA,IAAIC,EAAgB,GAChBC,EAAe,GACZD,EAAcF,OAAS,IAAI,CAChC,IAAII,EAAIC,KAAKC,MAAsB,GAAhBD,KAAKE,WACU,IAA9BL,EAAcM,QAAQJ,IAAWF,EAAcJ,KAAKM,GAI1D,OADAF,EAAcO,KAAI,SAACC,GAAD,OAAWP,EAAaL,KAAKG,EAAOS,OAC/CP,I,oCAGKvB,GACZ,QAAI+B,KAAKxB,MAAME,cAAcuB,SAASb,SAASnB,M,qCASP,KAApC+B,KAAKxB,MAAME,cAAcW,QAC3BW,KAAKlB,SAAS,CACZH,aAAc,sCACdd,KAAMmC,KAAKxB,MAAMX,KAAO,EACxBD,MAAO,EACPc,cAAe,O,+BA6BX,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CAASd,MAAOoC,KAAKxB,MAAMZ,MAAOD,iBAAkBqC,KAAKxB,MAAMb,iBAAkBE,KAAMmC,KAAKxB,MAAMX,OAClG,kBAAC,EAAD,MACA,kBAAC,EAAD,KAEImC,KAAKxB,MAAMC,OAAOqB,KAAI,SAAA1B,GAAK,OACzB,kBAAC,EAAD,CACEF,GAAIE,EAAMF,GACVgC,IAAK9B,EAAMF,GACXD,IAAKG,EAAMF,GACXE,MAAOA,EAAMA,MACb+B,MAAO,EAAK3B,MAAM2B,MAClB7B,SAAU,EAAKA,oB,GAjFb8B,aCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6ae2816d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Clicky Game!</h1>\r\n            <h3>Clicking on an image gives 1 score, reach 16 to win. don't click the same image twice.</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React from \"react\";\r\nimport \"./NavTabs.css\";\r\n\r\nfunction NavTabs (props) {\r\n    return (\r\n        <div className=\"row nav-bar nav-bar-fluid\">\r\n            <div className=\"col-3\">\r\n                <h2>Clicky Game</h2>\r\n            </div>\r\n            <div className=\"col-6\">\r\n                <h2>{props.victoryCondition}</h2>\r\n            </div>\r\n            <div className=\"col-3\">\r\n                <h2>Score: {props.score} |-| Wins: {props.Wins}</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavTabs;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nfunction Wrapper(props) {\r\n    return (\r\n        <div className=\"wrapper jumbotron jumbotron-fluid\">{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./ImageCard.css\"\r\n\r\nfunction ImageCard(props) {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"img-container\">\r\n                <img alt={props.id} src={props.image} onClick={props.onMouse1}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageCard;","import React, { Component } from 'react';\nimport Banner from \"./components/Banner/Banner\"\nimport NavTabs from \"./components/NavTabs/NavTabs\"\nimport images from \"./warframes.json\"\nimport Wrapper from \"./components/Wrapper/Wrapper\"\nimport ImageCard from \"./components/Wrapper/ImageCards/ImageCard\"\n\n\n\nclass App extends Component {\n  state = {\n    images: images,\n    score: 0,\n    Wins: 0,\n    guessedImages: [],\n    victoryCondition: \"\",\n    winCondition: \"\"\n  };\n\n  // generate from 0-15 to pick image\n  generateRandomImage(genArr) {\n    var warframeIndex = [];\n    var randomResult = [];\n    while (warframeIndex.length < 16) {\n      var z = Math.floor(Math.random() * 16);\n      if (warframeIndex.indexOf(z) === -1) warframeIndex.push(z);\n    }\n\n    warframeIndex.map((index) => randomResult.push(genArr[index]))\n    return randomResult\n  };\n  // function for guessed correctly and not up to 15\n  guessedImages(alt) {\n    if (this.state.guessedImages.includes(parseInt(alt))) {\n      return true\n    } else {\n      return false\n    };\n  };\n\n  // function for correct guesses all 16\n  winCondition() {\n    if (this.state.guessedImages.length === 16) {\n      this.setState({\n        winCondition: \"Congratulations you won the game!!!\",\n        Wins: this.state.Wins + 1,\n        score: 0,\n        guessedImages: []\n      });\n    };\n  };\n  // on click events\n  onMouse1 = event => {\n    const { alt } = event.target;\n    if (this.guessedImages(alt)) {\n      this.state.guessedImages = []\n      this.setState({\n        images: this.generateRandomImage(this.state.images),\n        victoryCondition: \"Sorry, but you already picked that Warframe.\",\n        score: 0\n      });\n      console.log(this.state.images)\n    } else {\n      var correctGuess = this.state.guessedImages\n      correctGuess.push(parseInt(alt))\n\n      this.setState({\n        score: correctGuess.length,\n        guessedImages: correctGuess,\n        images: this.generateRandomImage(this.state.images),\n        victoryCondition: \"Good!\"\n      })\n    }\n    this.winCondition()\n  }\n  // render\n  render() {\n    return (\n      <div>\n        <NavTabs score={this.state.score} victoryCondition={this.state.victoryCondition} Wins={this.state.Wins} />\n        <Banner />\n        <Wrapper>\n          {\n            this.state.images.map(image => (\n              <ImageCard\n                id={image.id}\n                key={image.id}\n                alt={image.id}\n                image={image.image}\n                count={this.state.count}\n                onMouse1={this.onMouse1} \n              />\n            ))\n          }\n\n        </Wrapper>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}